---
- name: check required variables
  fail: msg="{{ item }} is not defined"
  when: item not in vars
  with_items: "{{ samba_dc_replica_required_vars }}"

- name: clean samba replica
  include_tasks: replica_clean.yml
  when: samba_clean_replica is defined and samba_clean_replica

- name: prepare samba server
  include_tasks: prepare.yml

- name: prepare bind service
  include_tasks: bind.yml

- name: install samba replica packages
  apt_rpm:
    pkg: "{{ samba_dc_replica_packages }}"
    state: present
  when: samba_dc_replica_packages | length > 0
  notify: restart samba

- name: wait for master DC to start up
  include_tasks: wait4master.yml

- name: register node as a replica
  block:
  - name: get kerberos keky
    shell: echo {{samba_admin_pass}} | kinit administrator@{{samba_realm|upper}}
    changed_when: false

  - name: generate smb.conf
    template:
      src: smb.conf.replica.j2
      dest: /etc/samba/smb.conf

  - name: try to joint to the domain as a replica
    shell: |
      set -euo pipefail
      if ! samba-tool dns query {{ samba_master_hostname }} {{ samba_realm }} {{ inventory_hostname_short }} A; then
        samba-tool dns add {{ samba_master_hostname }} {{ samba_realm }} {{ inventory_hostname_short }} A {{ samba_address }} -k yes
      fi
      if [[ ! -f /var/lib/samba/private/sam.ldb.d/DC={{(samba_realm | upper).replace('.', ',DC=')}}.ldb ]]; then
        samba-tool domain join {{ samba_realm }} DC --dns-backend={{ samba_dns_backend }} --backend-store={{ samba_backend_store }} --site={{ samba_site }} -k yes 2>&1 | tee /var/log/samba/join.log
        echo replica_changed
      fi
    register: result
    changed_when: '"replica_changed" in result.stdout'
    notify: restart samba

  - name: set localhost as a nameserver
    template:
      src: resolv.conf.j2
      dest: /etc/net/ifaces/lo/resolv.conf
    vars:
      master_nameserver: '127.0.0.1'
    notify: restart network

  - name: samba upgrade dns
    shell: samba_upgradedns --dns-backend={{samba_dns_backend}}
    when: samba_dns_backend != "SAMBA_INTERNAL"
    notify: restart bind

  - name: enable bind service
    service:
      name: bind
      enabled: true
    when: samba_dns_backend != "SAMBA_INTERNAL"

  - name: disable bind service
    service:
      name: bind
      enabled: false
    when: samba_dns_backend == "SAMBA_INTERNAL"

- name: register node in localhost hostvars
  set_fact:
    samba_replicas: "{{ hostvars['localhost']['samba_replicas'] | default([]) }} + [ '{{ inventory_hostname_short }}' ]"
  delegate_to: localhost
  delegate_facts: true
