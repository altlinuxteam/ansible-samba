---
- name: check required variables
  fail: msg="{{ item }} is not defined"
  when: item not in vars
  with_items: "{{ samba_dc_replica_required_vars }}"

- name: clean samba replica
  include_tasks: replica_clean.yml
  when: samba_clean_replica is defined and samba_clean_replica

- name: install samba replica packages
  apt_rpm:
    pkg: "{{samba_dc_replica_packages | join(',')}}"
    state: installed
  when: samba_dc_replica_packages | length > 0
  notify: restart samba

- name: register node as a replica
  block:
  - name: get kerberos keky
    shell: echo {{samba_admin_pass}} | kinit administrator@{{samba_realm|upper}}
    changed_when: false

  - name: search for samba address
    shell: |
      ip r | grep 'scope link' | grep {{samba_network}} | cut -d' ' -f3 | xargs ip -o -4 a sh dev | awk '{print $4;}' | cut -d'/' -f1
    register: result

  - name: register samba address
    set_fact:
      samba_address: "{{result.stdout}}"

  - name: generate smb.conf
    template:
      src: smb.conf.replica.j2
      dest: /etc/samba/smb.conf

  - name: try to joint to the domain as a replica
    shell: |
      set -euo pipefail
      if ! samba-tool dns query {{samba_master_hostname}} {{samba_realm}} {{inventory_hostname_short}} A; then
        SAMBA_ADDRESS=$(ip r | grep 'scope link' | grep {{samba_network}} | cut -d' ' -f3 | xargs ip -o -4 a sh dev | awk '{print $4;}' | cut -d'/' -f1)
        samba-tool dns add {{samba_master_hostname}} {{samba_realm}} {{inventory_hostname_short}} A $SAMBA_ADDRESS -k yes
      fi
      if [[ ! -f /var/lib/samba/private/sam.ldb.d/DC={{(samba_realm|upper).replace('.', ',DC=')}}.ldb ]]; then
        samba-tool domain join {{samba_realm}} DC -k yes > /var/log/samba/join.log 2>&1
        echo replica_changed
      fi
    register: result
    changed_when: '"replica_changed" in result.stdout'
    notify: restart samba

- name: register node in localhost hostvars
  set_fact:
    samba_replicas: "{{ hostvars['localhost']['samba_replicas'] | default([]) }} + [ '{{ inventory_hostname_short }}' ]"
  delegate_to: localhost
  delegate_facts: true
