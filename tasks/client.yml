---
- name: check required variables
  fail: msg="{{ item }} is not defined"
  when: item not in vars
  with_items: "{{ samba_cl_required_vars }}"

#- name: Configure client network with NetworkManager
#  include_tasks: net_nmcli.yml

#- name: wait for node to comeback
#  wait_for_connection:
#    delay: 3
#    timeout: 30

- name: install samba client packages
  apt_rpm:
    pkg: "{{ samba_cl_packages }}"
    state: present
  when: samba_cl_packages | length > 0

#- name: create /etc/krb5.conf
#  template:
#    src: krb5.conf.j2
#    dest: /etc/krb5.conf
#    owner: root
#    group: root
#    mode: 0644
#
#- name: generate initial smb.conf
#  template:
#    src: smb.conf.client.j2
#    dest: /etc/samba/smb.conf

- name: wait for domain controller(s) to start up
  include_tasks: wait4master.yml

- name: check domain join status
  command: system-auth status
  register: authstate
  changed_when: False

- name: register domain join status
  set_fact:
    joined: "{{ authstate.stdout == 'ad ' + samba_realm | upper + ' ' + inventory_hostname_short | upper + ' ' + samba_domain | upper }}"

- name: join to the domain
  shell: |
    system-auth write ad \
    {{ samba_realm | upper }} \
    {{ inventory_hostname_short }} \
    {{ samba_domain | upper }} \
    'Administrator' \
    '{{ samba_admin_pass }}'
  when: joined == False or "{{ samba_deploy_soft | default(False, true) }}" == False

- name: register node in localhost hostvars
  set_fact:
    samba_clients: "{{ hostvars['localhost']['samba_clients'] | default([]) }} + [ '{{ inventory_hostname_short }}' ]"
  delegate_to: localhost
  delegate_facts: true
