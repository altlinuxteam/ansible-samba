---
- name: check required variables
  fail: msg="{{ item }} is not defined"
  when: item not in vars
  with_items: "{{ samba_cl_required_vars }}"

#- name: Configure client network with NetworkManager
#  include_tasks: net_nmcli.yml

#- name: wait for node to comeback
#  wait_for_connection:
#    delay: 3
#    timeout: 30

- name: install samba client packages
  apt_rpm:
    pkg: "{{ samba_cl_packages }}"
    state: present
  when: samba_cl_packages | length > 0

- name: install sssd client
  apt_rpm:
    pkg: "{{ samba_cl_packages_sssd }}"
    state: present
  when: samba_cl_packages_sssd | length > 0 and samba_client == "sssd"

- name: install winbind client
  apt_rpm:
    pkg: "{{ samba_cl_packages_winbind }}"
    state: present
  when: samba_cl_packages_winbind | length > 0 and samba_client == "winbind"

- name: wait for domain controller(s) to start up
  include_tasks: wait4master.yml

- name: check domain info status
  command: alterator-cmdline /auth action read
  register: authinfo
  changed_when: False

- name: register domain info status
  set_fact:
    joined_info: "{{ ( authinfo.stdout | regex_search('auth_type:' + 'ad') and
                       authinfo.stdout | regex_search('ad_domain:' + samba_realm | upper) and
                       authinfo.stdout | regex_search('ad_host:' + inventory_hostname_short | upper) and
                       authinfo.stdout | regex_search('ad_workgroup:' + samba_domain | upper) ) != none }}"

- name: check domain join status
  command: kinit -k "{{ inventory_hostname_short | upper }}\$"
  register: authstate
  changed_when: False
  failed_when: False

- name: register domain join status
  set_fact:
    joined: "{{ joined_info and (authstate.rc == 0) }}"

- name: join to the domain
  shell: |
    system-auth write ad \
    {{ samba_realm | upper }} \
    {{ inventory_hostname_short }} \
    {{ samba_domain | upper }} \
    'Administrator' \
    '{{ samba_admin_pass }}' \
    '{{ "--winbind" if samba_client == "winbind" }}'
  when: not joined | bool or not samba_deploy_soft | bool

- name: register node in localhost hostvars
  set_fact:
    samba_clients: "{{ hostvars['localhost']['samba_clients'] | default([]) }} + [ '{{ inventory_hostname_short }}' ]"
  delegate_to: localhost
  delegate_facts: true
