---
- block:
  - name: check required variables
    fail: msg="{{ item }} is not defined"
    when: item not in vars
    with_items: "{{ samba_dc_required_vars }}"

  - name: install openresolv and etcnet
    apt_rpm: pkg=openresolv,etcnet state=present
    register: openresolv_install

  - name: check if altlinux-openresolv service exists
    command: service altlinux-openresolv status
    register:
      altlinux_openresolv_status
    failed_when: False

  - set_fact:
      altlinux_openresolv_exists: "{{ altlinux_openresolv_status.rc != 3 }}"

  # XXX: touching /etc/resolv.conf might start altlinux-openresolv.service,
  # (if it hasn't been started before, i.e. if the openresolv package haven't
  # been installed before applying this role). altlinux-openresolv overwrites
  # modifications of /etc/resolv.conf done by this role. Therefore explicitly
  # start altlinux-openresolv before adjusting /etc/resolv.conf
  - name: start altlinux-openresolv
    service: name=altlinux-openresolv state=started
    when: altlinux_openresolv_exists|bool and openresolv_install.changed|bool

  - name: install samba DC common packages
    shell: "apt-get install -y {{ samba_dc_common_packages | join(' ') }}"
    when: (samba_dc_common_packages | length > 0) and samba_flavor != 'client'
    notify: restart samba

  - name: create /etc/krb5.conf
    template:
      src: krb5.conf.j2
      dest: /etc/krb5.conf
      owner: root
      group: root
      mode: 0644

  - name: set hostname (non permanent)
    shell: hostname "{{inventory_hostname_short}}.{{samba_realm}}"
    changed_when: false

  - include: dns.yml

  when: samba_flavor != 'gen_test_env'

- name: create openldap config directory
  file:
   path: "/etc/openldap"
   state: directory

- name: disable reverse dns for ldap requests
  template:
    src: ldap.conf.j2
    dest: /etc/openldap/ldap.conf

- name: deploy DC master
  include_tasks: master.yml
  when: samba_flavor == 'master'

- name: deploy DC replica
  include_tasks: replica.yml
  when: samba_flavor == 'replica'

- name: deploy samba client
  include_tasks: client.yml
  when: samba_flavor == 'client'

- name: configure sysvol sync
  include_tasks: sysvol_sync.yml
  when: samba_sysvol_sync is defined and samba_sysvol_sync and (samba_flavor == 'master' or samba_flavor == 'replica')

- name: refresh kerberos key
  shell: echo {{samba_admin_pass}} | kinit administrator@{{samba_realm|upper}}
  changed_when: false
  register: task_result
  until: task_result.rc == 0
  retries: 30
  delay: 1

- name: restart samba service
  service:
    name: samba
    state: restarted
  when: samba_flavor != 'client'

- name: generate test env vars
  include_tasks: generate_test_env_vars.yml
  when: samba_flavor == 'gen_test_env'
