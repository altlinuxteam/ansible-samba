---
- block:
  - name: check required variables
    fail: msg="{{ item }} is not defined"
    when: item not in vars
    with_items: "{{ samba_dc_required_vars }}"

  - name: remove conflicting packages and update the package database
    apt_rpm: pkg=sysconfig-network state=absent update_cache=yes

  - name: install openresolv and etcnet
    apt_rpm: pkg=openresolv,etcnet state=present
    register: openresolv_install

  - name: check if altlinux-openresolv service exists
    command: systemctl status altlinux-openresolv
    register:
      altlinux_openresolv_status
    failed_when: false

  - set_fact:
      altlinux_openresolv_exists: "{{ altlinux_openresolv_status.rc != 3 }}"

  # XXX: touching /etc/resolv.conf might start altlinux-openresolv.service,
  # (if it hasn't been started before, i.e. if the openresolv package haven't
  # been installed before applying this role). altlinux-openresolv overwrites
  # modifications of /etc/resolv.conf done by this role. Therefore explicitly
  # start altlinux-openresolv before adjusting /etc/resolv.conf
  - name: start altlinux-openresolv
    service: name=altlinux-openresolv state=started
    when: altlinux_openresolv_exists|bool and openresolv_install.changed|bool

  - name: install samba DC common packages
    apt_rpm:
      pkg: "{{ samba_dc_common_packages }}"
      state: present
    when: (samba_dc_common_packages | length > 0) and samba_flavor != 'client'
    notify: restart samba

  - name: install samba-dc-mitkrb5 packages
    block:
    - apt_rpm:
        pkg: "{{ samba_dc_heimdal_packages }}"
        state: absent
      notify: restart samba
    - apt_rpm:
        pkg: "{{ samba_dc_mitkrb5_packages }}"
        state: present
      notify: restart samba
    when: samba_dc_mitkrb5 | bool

  - name: create /etc/krb5.conf
    template:
      src: krb5.conf.j2
      dest: /etc/krb5.conf
      owner: root
      group: root
      mode: 0644

  - name: create dir for kdc.conf
    file:
      path: "/usr/local/samba/private"
      state: directory

  - name: create kdc.conf
    template:
      src: kdc.conf.j2
      dest: /usr/local/samba/private/kdc.conf
      owner: root
      group: root
      mode: 0644

      #  - name: set short and long name of dc
      #    set_fact:
      #      default_gateway: "{{ ansible_eth0.ipv4.address.split('.')[0:3] | join('.') }}.1"
      #      network_prefix: "{{ network | ansible.netcommon.ipaddr('prefix') }}"
      #    vars:
      #      network: "{{ ansible_eth0.ipv4.address }}/{{ ansible_eth0.ipv4.netmask }}"
  - name: install samba-dc-heimdal packages
    block:
    - apt_rpm:
        pkg: "{{ samba_dc_mitkrb5_packages }}"
        state: absent
      notify: restart samba
    - apt_rpm:
        pkg: "{{ samba_dc_heimdal_packages }}"
        state: present
      notify: restart samba
    when: not samba_dc_mitkrb5 | bool

  - name: set hostname
    ansible.builtin.hostname:
      name: "{{ inventory_hostname_short }}.{{ samba_realm }}"
      use: systemd

  - include: common.yml
  when: samba_flavor != 'gen_test_env'

- name: create openldap config directory
  file:
    path: "/etc/openldap"
    state: directory

- name: disable reverse dns for ldap requests
  template:
    src: ldap.conf.j2
    dest: /etc/openldap/ldap.conf

- name: deploy DC master
  include_tasks: master.yml
  when: samba_flavor == 'master'

- name: deploy DC replica
  include_tasks: replica.yml
  when: samba_flavor == 'replica'

- name: deploy samba client
  include_tasks: client.yml
  when: samba_flavor == 'client'

- name: refresh kerberos key
  shell: echo {{samba_admin_pass}} | kinit administrator@{{samba_realm|upper}}
  changed_when: false
  register: task_result
  until: task_result.rc == 0
  retries: 30
  delay: 1

- name: restart samba service
  service:
    name: samba
    state: restarted
  when: samba_flavor != 'client'

- name: generate test env vars
  include_tasks: generate_test_env_vars.yml
  when: samba_flavor == 'gen_test_env'
